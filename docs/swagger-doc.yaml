openapi: 3.0.1
info:
  title: Tunemyles API
  description: >-
    This is a sample server Petstore server. You can find out more about Swagger
    at [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net](irc.freenode.net)
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'http://localhost:5000/api/v2'
    description: Dev Server API URL
tags:
  - name: check
    description: Checking Server
  - name: account
    description: Account Route
  - name: masters
    description: Master Route
  - name: merchants
    description: Merchant Route
  - name: products
    description: Product Route
  - name: banks
    description: Bank Route
  - name: wallets
    description: Wallet Route
  - name: carts
    description: Cart Route
  - name: transactions
    description: Transaction Route
paths:
  /:
    get:
      tags:
        - check
      summary: Check Server
      description: Check Server
      operationId: checkServer
      responses:
        '200':
          description: OK
          content: {}
        4XX:
          description: Request Error
          content: {}
        5XX:
          description: Sever Error
          content: {}
  /account/register:
    post:
      tags:
        - account
      summary: Register
      description: Register
      operationId: registerUser
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthorizedResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /account/merchant:
    post:
      tags:
        - account
      summary: Activate User Merchant (Route All Roles)
      description: Activate User Merchant (Route All Roles)
      operationId: activateMerchant
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateMerchantBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthorizedResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /account/login:
    post:
      tags:
        - account
      summary: Login
      description: Login
      operationId: loginUser
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthorizedResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /account/me:
    get:
      tags:
        - account
      summary: Get Profile (Route All Roles)
      description: Get Profile (Route All Roles)
      operationId: getProfile
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /account/update-profile:
    patch:
      tags:
        - account
      summary: Update Profile (Route All Roles)
      description: Update Profile (Route All Roles)
      operationId: updateProfile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfileBody'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /account/forgot-password:
    post:
      tags:
        - account
      summary: Forgot Password
      description: Forgot Password
      operationId: forgotPassword
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTokenResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  '/account/verify-token/{token}':
    patch:
      tags:
        - account
      summary: Verify Token
      description: Verify Token
      operationId: verifyToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTokenResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /account/reset-password:
    patch:
      tags:
        - account
      summary: Reset Password
      description: Reset Password
      operationId: resetPassword
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /masters/banks:
    post:
      tags:
        - masters
      summary: Add Bank Data (Admin Route)
      description: Add Bank Data (Admin Route)
      operationId: addBank
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostBankBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    get:
      tags:
        - masters
      summary: Get All Bank Data (Route All Roles)
      description: Get All Bank Data (Route All Roles)
      operationId: getAllBank
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - bank_name
        - name: search
          in: query
          description: Available search field bank_name
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterBanksResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/banks/{id}/steps':
    post:
      tags:
        - masters
      summary: Add Bank Step (Admin Route)
      description: Add Bank Step (Admin Route)
      operationId: addBankStep
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBankStepBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  '/masters/banks/{id}':
    get:
      tags:
        - masters
      summary: Get Bank Detail (Admin Route)
      description: Get Bank Detail (Admin Route)
      operationId: bankDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterBankDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    patch:
      tags:
        - masters
      summary: Update Bank Data (Admin Route)
      description: Update Bank Data (Admin Route)
      operationId: updateBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBankBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - masters
      summary: Delete Bank Data (Admin Route)
      description: Delete Bank Data (Admin Route)
      operationId: deleteBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/banks/{id}/account':
    patch:
      tags:
        - masters
      summary: Update Bank Detail (Admin Route)
      description: Update Bank Detail (Admin Route)
      operationId: updateBankDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBankAccountBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  '/masters/banks/{id}/logo':
    patch:
      tags:
        - masters
      summary: Change Bank Logo (Admin Route)
      description: Change Bank Logo (Admin Route)
      operationId: changeBankLogo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateBankLogoBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/banks/steps/{id}':
    delete:
      tags:
        - masters
      summary: Delete Bank Step (Admin Route)
      description: Delete Bank Step (Admin Route)
      operationId: deleteBankStep
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /masters/categories:
    post:
      tags:
        - masters
      summary: Add Category (Admin Route)
      description: Add Category (Admin Route)
      operationId: addCategory
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCategoryBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    get:
      tags:
        - masters
      summary: Get All Categories (Route All Roles)
      description: Get All Categories (Route All Roles)
      operationId: getAllCateogories
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - category
                  - description
        - name: search
          in: query
          description: 'Available search field wallet_name, wallet_description'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/categories/{id}':
    patch:
      tags:
        - masters
      summary: Update Category (Admin Route)
      description: Update Category (Admin Route)
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - masters
      summary: Delete Category (Admin Route)
      description: Delete Category (Admin Route)
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/categories/{id}/icon':
    patch:
      tags:
        - masters
      summary: Change Category Icon (Admin Route)
      description: Change Category Icon (Admin Route)
      operationId: changeCategoryIcon
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeCategoryIconBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /masters/medias:
    post:
      tags:
        - masters
      summary: Add Media (Admin Route)
      description: Add Media (Admin Route)
      operationId: addMedia
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostMediaBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    get:
      tags:
        - masters
      summary: Get All Media (Route All Roles)
      description: Get All Media (Route All Roles)
      operationId: getAllMedia
      parameters:
        - name: orderDirection
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - label
        - name: search
          in: query
          description: Available search field label
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediasResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/medias/{id}':
    patch:
      tags:
        - masters
      summary: Update Media (Admin Route)
      description: Update Meida (Admin Route)
      operationId: updateMedia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostMediaBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    delete:
      tags:
        - masters
      summary: Delete Media (Admin Route)
      description: Delete Media (Admin Route)
      operationId: deleteMedia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /masters/wallets:
    post:
      tags:
        - masters
      summary: Add Wallet (Admin Route)
      description: Add Wallet (Admin Route)
      operationId: addWallet
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostWalletBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    get:
      tags:
        - masters
      summary: Get All Wallet (Route All Roles)
      description: Get All Wallet (Route All Roles)
      operationId: getAllWallet
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - wallet_name
                  - wallet_description
        - name: search
          in: query
          description: 'Available search field wallet_name, wallet_description'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterWalletsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/wallets/{id}':
    patch:
      tags:
        - masters
      summary: Update Wallet (Admin Route)
      description: Update Wallet (Admin Route)
      operationId: updateWallet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - masters
      summary: Delete Wallet (Admin Route)
      description: Delete Wallet (Admin Route)
      operationId: deleteWallet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/masters/wallets/{id}/logo':
    patch:
      tags:
        - masters
      summary: Update Wallet Logo (Admin Route)
      description: Update Wallet Logo (Admin Route)
      operationId: updateWalletLogo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateWalletLogoBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /masters/faqs:
    post:
      tags:
        - masters
      summary: Add Faq (Admin Route)
      description: Add Faq (Admin Route)
      operationId: addFaq
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFaqBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    get:
      tags:
        - masters
      summary: Get All Faqs
      description: Get All Faqs
      operationId: getAllFaqs
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFaqsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/masters/faqs/{id}':
    patch:
      tags:
        - masters
      summary: Update Faq (Admin Route)
      description: Update Faq (Admin Route)
      operationId: updateFaq
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFaqBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - masters
      summary: Delete Faq (Admin Route)
      description: Delete FAq (Admin Route)
      operationId: deleteFaq
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /merchants:
    get:
      tags:
        - merchants
      summary: Get Single Merchant (Merchant Route)
      description: Get Single Merchant (Merchant Route)
      operationId: getSingleMerchant
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantProfileResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    patch:
      tags:
        - merchants
      summary: Update Merchant Data (Merchant Route)
      description: Upadate Merchant Data (Merchant Route)
      operationId: updateMerchant
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateMerchantProfileBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /merchants/operation-time:
    patch:
      tags:
        - merchants
      summary: Update Merchant Operation Time (Merchant Route)
      description: Update Merchant Operation Time (Merchant Route)
      operationId: updateMerchantOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchantClosetimeBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /merchants/products:
    post:
      tags:
        - merchants
      summary: Add Product (Merchant Route)
      description: Add Product (Merchant Route)
      operationId: addProduct
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostMerchantProductBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMerchantProductResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    get:
      tags:
        - merchants
      summary: Product List (Merchant Route)
      description: Product List (Merchant Route)
      operationId: productList
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - product_name
                  - market_name
                  - market_address
        - name: search
          in: query
          description: 'Available search field product_name, market_name, market_address'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantProductsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/products/{id}/image':
    post:
      tags:
        - merchants
      summary: Add Product Image (Merchant Route)
      description: Add Product Image (Merchant Route)
      operationId: productImage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostMerchantProductImageBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMerchantProductImageResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/products/{id}':
    get:
      tags:
        - merchants
      summary: Get Single Product (Route All Roles)
      description: Get Single Product (Route All Roles)
      operationId: singleProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantProductDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    patch:
      tags:
        - merchants
      summary: Update Product (Merchant Route)
      description: Update Product (Merchant Route)
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchantProductBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - merchants
      summary: Delete Product (Merchant Route)
      description: Delete Product (Merchant Route)
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/products/{id}/cover':
    patch:
      tags:
        - merchants
      summary: Change Product Cover (Merchant Route)
      description: Change Product Cover (Merchant Route)
      operationId: productCover
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateMerchantProductCoverBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeMerchantProductCoverResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/products/{id}/status':
    patch:
      tags:
        - merchants
      summary: Change Product Status (Merchant Route)
      description: Change Product Status (Merchant Route)
      operationId: productStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchantProductStatusBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMerchantProductStatusResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  '/merchants/products/{id}/categories':
    patch:
      tags:
        - merchants
      summary: Bind Product Category (Merchant Route)
      description: Bind Product Category (Merchant Route)
      operationId: bindProductCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindMerchantProductCategoryBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BindMerchantProductCategoryResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  '/merchants/products/categories/{id}':
    delete:
      tags:
        - merchants
      summary: Unbind Product Category (Merchant Route)
      description: Unbind Product Category (Merchant Route)
      operationId: unbindProductCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/products/image/{id}':
    delete:
      tags:
        - merchants
      summary: Delete Product Image (Merchant Route)
      description: Delete Product Image (Merchant Route)
      operationId: delteProductImage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /merchants/orders:
    get:
      tags:
        - merchants
      summary: Merchant Orders (Merchant Route)
      description: Merchant Orders (Merchant Route)
      operationId: merchantOrders
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - full_name
                  - phone_number
                  - address
        - name: search
          in: query
          description: 'Available search field full_name, phone_number, address'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantOrdersResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/merchants/orders/{id}':
    get:
      tags:
        - merchants
      summary: Merchant Order (Merchant Route)
      description: Merchant Order (Merchant Route)
      operationId: merchantOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantOrderDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    patch:
      tags:
        - merchants
      summary: Update Merchant Order (Merchant Route)
      description: Update Merchant Order (Merchant Route)
      operationId: updateMerchantOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMerchantOrderStatusBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMerchantOrderStatusResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /merchants/list:
    get:
      tags:
        - merchants
      summary: Merchant List
      description: Merchant List
      operationId: merchantList
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - full_name
                  - phone_number
                  - market_name
                  - market_address
        - name: search
          in: query
          description: >-
            Available search field full_name, phone_number, market_name,
            market_address
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantListResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/merchants/list/{id}':
    get:
      tags:
        - merchants
      summary: Merchant Products
      description: Merchant Products
      operationId: merchantProducts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantProductListResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /merchants/random:
    get:
      tags:
        - merchants
      summary: Merchant Random
      description: Merchant Random
      operationId: merchantRandom
      parameters:
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRandomMerchantsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /merchants/transactions:
    get:
      tags:
        - merchants
      summary: Merchant Transactions (Merchant Route)
      description: Merchant Transactions (Merchant Route)
      operationId: merchantTransactions
      parameters:
        - name: date
          in: query
          description: Available search year-month-date
          schema:
            $ref: '#/components/schemas/DateQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantTransactionHistoriesResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /merchants/incomes:
    get:
      tags:
        - merchants
      summary: Merchant Incomes (Merchant Route)
      description: Merchant Incomes (Merchant Route)
      operationId: merchantIncomes
      parameters:
        - name: year
          in: query
          description: Available search year
          schema:
            $ref: '#/components/schemas/YearQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantIncomeHistoriesResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /products:
    get:
      tags:
        - products
      summary: Get All Products
      description: Get All Products
      operationId: getAllProducts
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - product_name
                  - market_name
                  - market_address
        - name: search
          in: query
          description: 'Available search field product_name, market_name, market_address'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/products/categories/{categoryId}':
    get:
      tags:
        - products
      summary: Get All Products by Category
      description: Get All Products by Category
      operationId: getAllProductsByCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - product_name
                  - market_name
                  - market_address
        - name: search
          in: query
          description: 'Available search field product_name, market_name, market_address'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsByCategoryResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /banks/users:
    post:
      tags:
        - banks
      summary: Add Bank User (Route All Roles)
      description: Add Bank User (Route All Roles)
      operationId: addBankUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBankUserBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /banks:
    get:
      tags:
        - banks
      summary: Get All Bank Data (Route All Roles)
      description: Get All Bank Data (Route All Roles)
      operationId: allBankData
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBanksResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/banks/{id}':
    get:
      tags:
        - banks
      summary: Get Bank Utlity (Route All Roles)
      description: Get Bank Utlity (Route All Roles)
      operationId: getBankUtlity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /banks/users/get:
    get:
      tags:
        - banks
      summary: Get User Bank (Route All Roles)
      description: Get User Bank (Route All Roles)
      operationId: userBank
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankUsersResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/banks/users/{id}':
    patch:
      tags:
        - banks
      summary: Update Bank User (Route All Roles)
      description: Update Bank User (Route All Roles)
      operationId: updateBankUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBankUserBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - banks
      summary: Delete Bank User (Route All Roles)
      description: Delete Bank User (Route All Roles)
      operationId: deleteBankUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /wallets/topup:
    post:
      tags:
        - wallets
      summary: Top Up (Route All Roles)
      description: Top Up (Route All Roles)
      operationId: topUp
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /wallets/withdraw:
    post:
      tags:
        - wallets
      summary: Withdraw (Route All Roles)
      description: Withdraw (Route All Roles)
      operationId: withdraw
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /wallets:
    get:
      tags:
        - wallets
      summary: Get User Wallet (Route All Roles)
      description: Get User Wallet (Route All Roles)
      operationId: getUserWallet
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /wallets/topup/histories:
    get:
      tags:
        - wallets
      summary: Get User Top Up Histories (Route All Roles)
      description: Get User Top Up Histories (Route All Roles)
      operationId: topUpHistories
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - balance_request
                  - balance_transfer
        - name: search
          in: query
          description: 'Available search field balance_request, balance_transfer'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopUpHistoriesResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /wallets/withdraw/histories:
    get:
      tags:
        - wallets
      summary: Get User Withdraw Histories (Route All Roles)
      description: Get User Withdraw Histories (Route All Roles)
      operationId: withdrawHistories
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - balance_request
        - name: search
          in: query
          description: Available search field balance_request
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWithdrawHistoriesResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/wallets/topup/{id}':
    get:
      tags:
        - wallets
      summary: Get Top Up Detail (Route All Roles)
      description: Get Top Up Detail (Route All Roles)
      operationId: topUpDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopUpDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/wallets/withdraw/{id}':
    get:
      tags:
        - wallets
      summary: Get Withdraw Detail (Route All Roles)
      description: Get Withdraw Detail (Route All Roles)
      operationId: withdrawDetail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWithdrawDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /wallets/topup/users/all:
    get:
      tags:
        - wallets
      summary: Get All User Top Up (Admin Route)
      description: Get All User Top Up (Admin Route)
      operationId: allUserTopUp
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - balance_request
                  - balance_transfer
        - name: search
          in: query
          description: 'Available search field balance_request, balance_transfer'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllUserTopUpResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /wallets/withdraw/users/all:
    get:
      tags:
        - wallets
      summary: Get All User Withdraw (Admin Route)
      description: Get All User Withdraw (Admin Route)
      operationId: allUserWithdraw
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - balance_request
        - name: search
          in: query
          description: Available search field balance_request
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllUserWithdrawResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/wallets/topup/{id}/image':
    post:
      tags:
        - wallets
      summary: Upload Proof of Top Up (Route All Roles)
      description: Upload Proof of Top Up (Route All Roles)
      operationId: uploadProofOfTopUp
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopUpProofBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/wallets/topup/{id}/status':
    patch:
      tags:
        - wallets
      summary: Update Top Up Status (Admin Route)
      description: Update Top Up Status (Admin Route)
      operationId: updateTopUpStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTopUpStatusBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  '/wallets/withdraw/{id}/status':
    patch:
      tags:
        - wallets
      summary: Update Withdraw Status (Admin Route)
      description: Update Withdraw Status (Admin Route)
      operationId: updateWithdrawStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Request Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWithdrawStatusBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /carts:
    post:
      tags:
        - carts
      summary: Add To Cart (Route All Roles)
      description: Add To Cart (Route All Roles)
      operationId: addToCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    get:
      tags:
        - carts
      summary: Get Cart Items (Route All Roles)
      description: Get Cart Items (Route All Roles)
      operationId: cartItems
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCartItemsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/carts/{id}':
    patch:
      tags:
        - carts
      summary: Update Item QTY (Route All Roles)
      description: Update Item QTY (Route All Roles)
      operationId: updateItemQTY
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartQtyBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - carts
      summary: Delete Item (Route All Roles)
      description: Delete Item (Route All Roles)
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  /carts/checkout:
    post:
      tags:
        - carts
      summary: Cart Checkout (Route All Roles)
      description: Cart Checkout (Route All Roles)
      operationId: cartCheckout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /transactions:
    get:
      tags:
        - transactions
      summary: Get All Transactions (Route All Roles)
      description: Get All Transactions (Route All Roles)
      operationId: allTransactions
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - full_name
                  - phone_number
                  - address
        - name: search
          in: query
          description: 'Available search full_name, phone_number, address'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
        - name: status
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusQuery'
              - enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProcessedTransactionsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
  '/transactions/{id}':
    get:
      tags:
        - transactions
      summary: Get Single Transaction (Route All Roles)
      description: Get Single Transactions (Route All Roles)
      operationId: singleTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionDetailResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    patch:
      tags:
        - transactions
      summary: Finish Transaction (Route All Roles)
      description: Finish Transactions (Route All Roles)
      operationId: finishTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
    post:
      tags:
        - transactions
      summary: Review Transaction (Route All Roles)
      description: Review Transactions (Route All Roles)
      operationId: reviewTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewTransactionBody'
        required: true
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
      x-codegen-request-body-name: body
  /transations/reviewed:
    get:
      tags:
        - transactions
      summary: Get Reviewd Transactions (Route All Roles)
      description: Get Reviewed Transactions (Route All Roles)
      operationId: reviewedTransactions
      parameters:
        - name: orderDirection
          in: query
          schema:
            $ref: '#/components/schemas/OrderDirectionQuery'
        - name: orderBy
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderByQuery'
              - enum:
                  - created_at
                  - rating
                  - review
        - name: search
          in: query
          description: 'Available search review'
          schema:
            $ref: '#/components/schemas/SearchQuery'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/PageQuery'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/LimitQuery'
      responses:
        '200':
          description: Request Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReviewedTransactionsResponse'
        4XX:
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        5XX:
          description: Sever Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - APIKeyHeader: []
components:
  schemas:
    PageQuery:
      type: string
      default: '1'
    SearchQuery:
      type: string
      default: ''
    OrderByQuery:
      type: string
      default: created_at
    OrderDirectionQuery:
      type: string
      default: DESC
      enum:
        - ASC
        - DESC
    LimitQuery:
      type: string
      default: '10'
    DateQuery:
      type: string
    YearQuery:
      type: string
    StatusQuery:
      type: string
      default: '0'
    ApiResponse:
      type: object
      properties:
        code:
          type: number
        success:
          type: boolean
        messages:
          type: string
    GetToken:
      type: object
      properties:
        token:
          type: string
    UserAuthorizedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                type:
                  type: integer
                token:
                  type: string
    RegisterBody:
      required:
        - address
        - full_name
        - password
        - phone_number
        - username
      type: object
      properties:
        full_name:
          type: string
          minLength: 2
          maxLength: 255
        phone_number:
          type: string
          minLength: 5
          maxLength: 14
        address:
          type: string
          minLength: 5
          maxLength: 1000
        username:
          type: string
          minLength: 8
          maxLength: 20
        password:
          type: string
          minLength: 8
          maxLength: 20
    ActivateMerchantBody:
      required:
        - identity_photo
        - market_photo
        - no_identity
        - market_name
        - market_address
        - market_lat
        - market_lon
        - market_close_time
      properties:
        identity_photo:
          type: string
          format: binary
        market_photo:
          type: string
          format: binary
        no_identity:
          type: string
        market_name:
          type: string
        market_address:
          type: string
        market_lat:
          type: number
        market_lon:
          type: number
        market_close_time:
          type: string
    LoginBody:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    GetProfileResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                full_name:
                  type: string
                username:
                  type: string
                address:
                  type: string
                phone_number:
                  type: string
                img_url:
                  type: string
                  nullable: true
                wallets:
                  type: array
                  items:
                    type: object
                    properties:
                      balance:
                        type: integer
                      is_visible:
                        type: integer
                      wallet_name:
                        type: string
                        nullable: true
                      wallet_description:
                        type: string
                        nullable: true
                      logo_label:
                        type: string
                        nullable: true
                      logo_url:
                        type: string
                        nullable: true
    UpdateProfileBody:
      type: object
      properties:
        avatar:
          type: string
          format: binary
        full_name:
          type: string
        address:
          type: string
        phone_number:
          type: string
    ForgotPasswordBody:
      required:
        - phone_number
      type: object
      properties:
        phone_number:
          type: string
    VerifyTokenResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/GetToken'
    ResetPasswordBody:
      required:
        - new_password
      type: object
      properties:
        new_password:
          type: string
    PostBankBody:
      required:
        - bank_name
      properties:
        logo:
          type: string
          format: binary
        bank_name:
          type: string
    GetMasterBanksResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  bank_name:
                    type: string
                  logo_label:
                    type: string
                    nullable: true
                  logo_url:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
    PostBankStepBody:
      required:
        - step
      type: object
      properties:
        step:
          type: string
    GetMasterBankDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                bank_name:
                  type: string
                logo_label:
                  type: string
                  nullable: true
                logo_url:
                  type: string
                  nullable: true
                created_at:
                  type: string
                updated_at:
                  type: string
                steps:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      step:
                        type: string
                acccounts:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      acccount_name:
                        type: string
                      account_number:
                        type: string
    UpdateBankBody:
      type: object
      properties:
        bank_name:
          type: string
        visibility:
          type: integer
    UpdateBankAccountBody:
      required:
        - account_number
        - account_name
      type: object
      properties:
        account_number:
          type: string
        account_name:
          type: string
    UpdateBankLogoBody:
      required:
        - logo
      properties:
        logo:
          type: string
          format: binary
    PostCategoryBody:
      required:
        - category
        - description
        - slug
      properties:
        icon:
          type: string
          format: binary
        category:
          type: string
        slug:
          type: string
        description:
          type: string
    GetCategoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  category:
                    type: string
                  description:
                    type: string
                  slug:
                    type: string
                  icon_label:
                    type: string
                    nullable: true
                  icon_url:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    UpdateCategoryBody:
      type: object
      properties:
        category:
          type: string
        slug:
          type: string
        description:
          type: string
        visibility:
          type: integer
    ChangeCategoryIconBody:
      required:
        - icon
      properties:
        icon:
          type: string
          format: binary
    PostMediaBody:
      required:
        - image
      properties:
        image:
          type: string
          format: binary
    GetMediasResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  media:
                    type: string
                  url:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    PostWalletBody:
      required:
        - wallet_description
        - wallet_name
      properties:
        logo:
          type: string
          format: binary
        wallet_name:
          type: string
        wallet_description:
          type: string
    GetMasterWalletsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  wallet_name:
                    type: string
                  wallet_description:
                    type: string
                  logo_label:
                    type: string
                    nullable: true
                  logo_url:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                  updated_at:
                    type: string
    UpdateWalletBody:
      properties:
        wallet_name:
          type: string
        wallet_description:
          type: string
        visibility:
          type: integer
    UpdateWalletLogoBody:
      required:
        - logo
      properties:
        logo:
          type: string
          format: binary
    PostFaqBody:
      required:
        - answer
        - question
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
    GetFaqsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  question:
                    type: string
                  answer:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    UpdateFaqBody:
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
    GetMerchantProfileResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                merchant_id:
                  type: integer
                full_name:
                  type: string
                phone_number:
                  type: string
                market_id:
                  type: integer
                market_name:
                  type: string
                market_address:
                  type: string
                market_lat:
                  type: integer
                market_long:
                  type: integer
                market_close_time:
                  type: string
                profile_id:
                  type: integer
                profile_label:
                  type: string
                profile_url:
                  type: string
                identity_id:
                  type: integer
                identity_label:
                  type: string
                identity_url:
                  type: string
                status:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
    UpdateMerchantProfileBody:
      properties:
        identity_photo:
          type: string
          format: binary
        market_photo:
          type: string
          format: binary
        no_identity:
          type: string
        market_name:
          type: string
        market_address:
          type: string
        market_lat:
          type: number
        market_lon:
          type: number
        market_close_time:
          type: string
    UpdateMerchantClosetimeBody:
      type: object
      properties:
        close_time:
          type: string
    PostMerchantProductBody:
      required:
        - description
        - discount
        - price_default
        - price_selling
        - product_name
        - qty
      properties:
        product_name:
          type: string
        description:
          type: string
        cover:
          type: string
          format: binary
          default: '1'
        price_default:
          type: integer
          format: int32
        price_selling:
          type: integer
          format: int32
        qty:
          type: integer
          format: int32
        discount:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
          default: 1
    PostMerchantProductResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                product_id:
                  type: integer
    GetMerchantProductsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  product_util_id:
                    type: integer
                  product_name:
                    type: string
                  description:
                    type: string
                  status:
                    type: integer
                  price_default:
                    type: integer
                  price_selling:
                    type: integer
                  qty:
                    type: integer
                  discount:
                    type: integer
                  cover_label:
                    type: string
                  cover_url:
                    type: string
                  merchant_id:
                    type: integer
                  market_id:
                    type: integer
                  market_name:
                    type: string
                  market_address:
                    type: string
                  market_close_time:
                    type: string
                  market_status:
                    type: integer
                  photo_label:
                    type: string
                  photo_url:
                    type: string
                  creaetd_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    PostMerchantProductImageBody:
      required:
        - image
      properties:
        image:
          type: string
          format: binary
    PostMerchantProductImageResponse:
      type: object
      properties:
        id:
          type: integer
        product_util_id:
          type: integer
        image_id:
          type: integer
        image_label:
          type: string
        image_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    GetMerchantProductDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                product_util_id:
                  type: integer
                product_name:
                  type: string
                description:
                  type: string
                status:
                  type: integer
                price_default:
                  type: integer
                price_selling:
                  type: integer
                qty:
                  type: integer
                discount:
                  type: integer
                cover_label:
                  type: string
                cover_url:
                  type: string
                merchant_id:
                  type: integer
                market_id:
                  type: integer
                market_name:
                  type: string
                market_address:
                  type: string
                market_close_time:
                  type: string
                market_status:
                  type: integer
                photo_label:
                  type: string
                photo_url:
                  type: string
                creaetd_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                medias:
                  type: array
                  items:
                    type: object
                    properties:
                      product_image_id:
                        type: integer
                      image_label:
                        type: string
                      image_url:
                        type: string
                categories:
                  type: array
                  items:
                    type: object
                    properties:
                      product_category_id:
                        type: number
                      category:
                        type: string
                      slug:
                        type: string
                      description:
                        type: string
                      icon_label:
                        type: string
                      icon_url:
                        type: string
    UpdateMerchantProductBody:
      type: object
      properties:
        product_name:
          type: string
        description:
          type: string
        cover:
          type: string
          format: binary
          default: '1'
        price_default:
          type: integer
          format: int32
        price_selling:
          type: integer
          format: int32
        qty:
          type: integer
          format: int32
        discount:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
          default: 1
    UpdateMerchantProductCoverBody:
      required:
        - cover
      properties:
        cover:
          type: string
          format: binary
    ChangeMerchantProductCoverResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                cover_label:
                  type: string
                cover_url:
                  type: string
    UpdateMerchantProductStatusBody:
      required:
        - status
      properties:
        status:
          type: integer
    UpdateMerchantProductStatusResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                status:
                  type: integer
    BindMerchantProductCategoryBody:
      type: object
      properties:
        category_id:
          type: integer
    BindMerchantProductCategoryResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                category_id:
                  type: integer
                category:
                  type: string
                slug:
                  type: string
                description:
                  type: string
                product_util_id:
                  type: integer
    GetMerchantOrdersResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  transaction_token:
                    type: string
                  total_price:
                    type: integer
                  status:
                    type: integer
                  buyer_id:
                    type: integer
                  full_name:
                    type: string
                  phone_number:
                    type: string
                  address:
                    type: string
                  profile_label:
                    type: string
                  profile_url:
                    type: string
                  merchant_id:
                    type: integer
                  market_id:
                    type: integer
                  market_name:
                    type: string
                  photo_label:
                    type: string
                  photo_url:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    GetMerchantOrderDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  transaction_id:
                    type: integer
                  product_id:
                    type: integer
                  transaction_token:
                    type: string
                  qty:
                    type: integer
                  sub_total_price:
                    type: integer
                  status:
                    type: integer
                  product_name:
                    type: string
                  description:
                    type: string
                  product_status:
                    type: integer
                  cover_label:
                    type: string
                  cover_url:
                    type: string
                  buyer_id:
                    type: integer
                  merchant_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    UpdateMerchantOrderStatusBody:
      type: object
      properties:
        status:
          type: integer
    UpdateMerchantOrderStatusResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                transaction_id:
                  type: integer
                product_id:
                  type: integer
                transaction_token:
                  type: string
                qty:
                  type: integer
                sub_total_price:
                  type: integer
                status:
                  type: integer
                product_name:
                  type: string
                description:
                  type: string
                product_status:
                  type: integer
                cover_label:
                  type: string
                cover_url:
                  type: string
                buyer_id:
                  type: integer
                merchant_id:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
    GetMerchantListResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  merchant_id:
                    type: integer
                  full_name:
                    type: string
                  phone_number:
                    type: string
                  market_id:
                    type: integer
                  market_name:
                    type: string
                  market_address:
                    type: string
                  market_lat:
                    type: integer
                  market_long:
                    type: integer
                  market_close_time:
                    type: string
                  profile_id:
                    type: integer
                  profile_label:
                    type: string
                  profile_url:
                    type: string
                  identity_id:
                    type: integer
                  identity_label:
                    type: string
                  identity_url:
                    type: string
                  status:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    GetMerchantProductListResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  product_util_id:
                    type: integer
                  product_name:
                    type: string
                  description:
                    type: string
                  status:
                    type: integer
                  price_default:
                    type: integer
                  price_selling:
                    type: integer
                  qty:
                    type: integer
                  discount:
                    type: integer
                  cover_label:
                    type: string
                  cover_url:
                    type: string
                  merchant_id:
                    type: integer
                  market_id:
                    type: integer
                  market_name:
                    type: string
                  market_address:
                    type: string
                  market_close_time:
                    type: string
                  market_status:
                    type: integer
                  photo_label:
                    type: string
                  photo_url:
                    type: string
                  creaetd_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    GetRandomMerchantsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  merchant_id:
                    type: integer
                  full_name:
                    type: string
                  phone_number:
                    type: string
                  market_id:
                    type: integer
                  market_name:
                    type: string
                  market_address:
                    type: string
                  market_lat:
                    type: integer
                  market_long:
                    type: integer
                  market_close_time:
                    type: string
                  profile_id:
                    type: integer
                  profile_label:
                    type: string
                  profile_url:
                    type: string
                  identity_id:
                    type: integer
                  identity_label:
                    type: string
                  identity_url:
                    type: string
                  status:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    GetMerchantTransactionHistoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  buyer_id:
                    type: integer
                  merchant_id:
                    type: integer
                  transaction_token:
                    type: string
                  total_price:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
    GetMerchantIncomeHistoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  total_price:
                    type: integer
                  month:
                    type: integer
    GetProductsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetProduct'
    GetProductsByCategoryResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetProduct'
    PostBankUserBody:
      required:
        - bank_id
        - account_number
        - account_name
      type: object
      properties:
        bank_id:
          type: integer
        account_number:
          type: string
        account_name:
          type: string
    GetBanksResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetBank'
                  - type: object
                    properties:
                      Logo:
                        $ref: '#/components/schemas/GetMedia'
                      Account:
                        type: array
                        items:
                          $ref: '#/components/schemas/GetBankUser'
    GetBankDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetBank'
                  - type: object
                    properties:
                      Logo:
                        $ref: '#/components/schemas/GetMedia'
                      Utilities:
                        type: array
                        items:
                          $ref: '#/components/schemas/GetBankUtility'
    GetBankUsersResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetBankUser'
                  - type: object
                    properties:
                      Bank:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/GetBank'
                          - type: object
                            properties:
                              Logo:
                                $ref: '#/components/schemas/GetMedia'
    UpdateBankUserBody:
      required:
        - bank_id
      type: object
      properties:
        bank_id:
          type: integer
        account_number:
          type: string
        account_name:
          type: string
    TopUpBody:
      required:
        - wallet_id
        - balance_request
        - balance_transfer
      type: object
      properties:
        wallet_id:
          type: integer
        balance_request:
          type: integer
        balance_transfer:
          type: integer
    WithdrawBody:
      required:
        - wallet_id
        - balance_request
      type: object
      properties:
        wallet_id:
          type: integer
        balance_request:
          type: integer
    GetWalletsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/GetUserWallet'
    GetTopUpHistoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetTopUp'
    GetWithdrawHistoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetWithdraw'
                  - type: object
                    properties:
                      UserBank:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/GetBankUser'
                          - type: object
                            properties:
                              Bank:
                                $ref: '#/components/schemas/GetBank'
    GetTopUpDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetTopUp'
                  - type: object
                    properties:
                      Bank:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/GetBank'
                          - type: object
                            properties:
                              Utilities:
                                type: array
                                items:
                                  $ref: '#/components/schemas/GetBankUtility'
                              Accounts:
                                type: array
                                items:
                                  $ref: '#/components/schemas/GetBankUser'
                      Media:
                        $ref: '#/components/schemas/GetMedia'
                      UserWallet:
                        type: object
                        properties:
                          id_u_user:
                            type: integer
                          u_user:
                            type: object
                            properties:
                              id_m_users:
                                type: integer
                              m_user:
                                type: object
                                properties:
                                  full_name:
                                    type: string
    GetWithdrawDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/GetTopUp'
                  - type: object
                    properties:
                      UserBank:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/GetBankUser'
                          - type: object
                            properties:
                              Bank:
                                type: object
                                allOf:
                                  - $ref: '#/components/schemas/GetBank'
                                  - type: object
                                    properties:
                                      Utilities:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/GetBankUtility'
    GetAllUserTopUpResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetTopUp'
    GetAllUserWithdrawResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetWithdraw'
    TopUpProofBody:
      required:
        - image
      properties:
        image:
          type: string
          format: binary
    UpdateTopUpStatusBody:
      type: object
      properties:
        status:
          type: integer
    UpdateWithdrawStatusBody:
      type: object
      properties:
        status:
          type: integer
    AddToCartBody:
      required:
        - qty
        - merchant_id
        - product_id
      type: object
      properties:
        qty:
          type: integer
        merchant_id:
          type: integer
        product_id:
          type: integer
    GetCartItemsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetCart'
    UpdateCartQtyBody:
      required:
        - qty
      type: object
      properties:
        qty:
          type: integer
    CheckoutBody:
      required:
        - price_total
      type: object
      properties:
        price_total:
          type: integer
    GetProcessedTransactionsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GetOrder'
    GetTransactionDetailResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              allOf:
                - $ref: '#/components/schemas/GetOrder'
                - type: object
                  properties:
                    products:
                      type: array
                      items:
                        $ref: '#/components/schemas/GetProductOrder'
    ReviewTransactionBody:
      required:
        - rating
        - review
      type: object
      properties:
        rating:
          type: integer
        review:
          type: string
    GetReviewedTransactionsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                id_product:
                  type: integer
                product_name:
                  type: string
                price_selling:
                  type: integer
                label:
                  type: string
                uri:
                  type: string
                id_merchant:
                  type: integer
                market_name:
                  type: string
                rating:
                  type: integer
                review:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
    GetProduct:
      type: object
      properties:
        id:
          type: integer
        id_m_users:
          type: integer
        product_name:
          type: string
        description:
          type: string
        id_cover:
          type: integer
        is_visible:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        price_default:
          type: integer
        price_selling:
          type: integer
        qty:
          type: integer
        discount:
          type: integer
        cover_uri:
          type: string
        cover_label:
          type: string
        id_merchant:
          type: integer
        no_identity:
          type: string
        id_identity_photo:
          type: integer
        id_market_photo:
          type: integer
        market_name:
          type: string
        market_address:
          type: string
        market_lat:
          type: number
        market_lon:
          type: number
        market_close_time:
          type: string
        market_visible:
          type: integer
        identity_uri:
          type: string
        identity_label:
          type: string
        market_uri:
          type: string
        market_label:
          type: string
    GetOrder:
      type: object
      properties:
        id:
          type: integer
        id_m_users:
          type: integer
        id_merchant:
          type: integer
        transaction_token:
          type: string
        total_price:
          type: integer
        status:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        full_name:
          type: string
        phone_number:
          type: string
        address:
          type: string
        id_photo:
          type: integer
        uri:
          type: string
        label:
          type: string
        id_user_merchant:
          type: integer
        id_market_photo:
          type: integer
        market_name:
          type: string
        market_address:
          type: string
        market_lat:
          type: integer
        market_lon:
          type: integer
        market_close_time:
          type: string
        market_visivle:
          type: integer
        merchant_uri:
          type: string
        merchant_label:
          type: string
        cover_uri:
          type: string
    GetProductOrder:
      type: object
      properties:
        id:
          type: integer
        id_u_user_transaction:
          type: integer
        id_m_products:
          type: integer
        qty:
          type: integer
        transaction_token:
          type: string
        sub_total_price:
          type: integer
        status:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        product_name:
          type: string
        description:
          type: string
        id_cover:
          type: integer
        product_visible:
          type: integer
        cover_uri:
          type: string
        cover_label:
          type: string
    GetCart:
      type: object
      properties:
        id:
          type: integer
        id_m_users:
          type: integer
        id_merchant:
          type: integer
        id_m_products:
          type: integer
        id_cover:
          type: integer
        qty:
          type: integer
        status:
          type: integer
        product_name:
          type: string
        description:
          type: string
        uri:
          type: string
        label:
          type: string
        price_default:
          type: integer
        price_selling:
          type: integer
        discount:
          type: integer
        max_qty:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    GetMedia:
      type: object
      properties:
        id:
          type: integer
        uri:
          type: string
        label:
          type: string
        is_visible:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetBank:
      type: object
      properties:
        id:
          type: integer
        id_logo:
          type: integer
        bank_name:
          type: string
        is_visible:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetBankUser:
      type: object
      properties:
        id:
          type: integer
        id_m_banks:
          type: integer
        id_m_users:
          type: integer
        account_number:
          type: string
        account_name:
          type: string
        is_visible:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetBankUtility:
      type: object
      properties:
        id:
          type: integer
        id_m_banks:
          type: integer
        step:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetUserWallet:
      type: object
      properties:
        id:
          type: integer
        id_u_user:
          type: integer
        id_m_wallets:
          type: integer
        balance:
          type: integer
        is_visible:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetTopUp:
      type: object
      properties:
        id:
          type: integer
        id_u_user_wallet:
          type: integer
        id_m_banks:
          type: integer
        balance_request:
          type: integer
        balance_transfer:
          type: integer
        status:
          type: integer
        proof_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetWithdraw:
      type: object
      properties:
        id:
          type: integer
        id_u_user_wallet:
          type: integer
        id_u_user_bank_account:
          type: integer
        balance_request:
          type: integer
        status:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      name: authorization
      in: header
