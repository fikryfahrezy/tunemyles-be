# https://ljn.io/posts/swagger-for-a-koa-api
# https://github.com/linusnorton/koa-swagger
# https://editor.swagger.io/
# https://swagger.io/docs/specification/2-0/basic-structure/

swagger: '2.0'
info:
  description: 'This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters. [ IGNORE THIS DEFAULT DESCRIPTION ]'
  version: '1.0.0'
  title: 'Tunemyles API'
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: 'apiteam@swagger.io'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:5000'
# basePath: '/api/v1'
tags:
  - name: 'check'
    description: 'Checking Server'
  - name: 'auth'
    description: 'Auth Route'
  - name: 'merchants'
    description: 'Merchant Route'
  - name: 'carts'
    description: 'Cart Route'
  - name: 'transactions'
    description: 'Transaction Route'
  - name: 'masters'
    description: 'Master Route'
  - name: 'banks'
    description: 'Bank Route'
  - name: 'wallets'
    description: 'Wallet Route'
  - name: 'products'
    description: 'Product Route'
schemes:
  - 'http'
paths:
  /api:
    get:
      tags:
        - 'check'
      summary: 'Check Server'
      description: 'Check Server'
      operationId: 'checkServer'
      responses:
        200:
          description: OK
        400:
          description: 'Request Error'
        404:
          description: 'Not Found'
        500:
          description: 'Sever Error'
  /api/v1/auth/login:
    post:
      tags:
        - 'auth'
      summary: 'Login'
      description: 'Login'
      operationId: 'loginUser'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/PostLogin'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    allOf:
                      - type: 'object'
                        properties:
                          type:
                            type: 'integer'
                      - $ref: '#/definitions/GetToken'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/register:
    post:
      tags:
        - 'auth'
      summary: 'Register'
      description: 'Register'
      operationId: 'registerUser'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/PostRegister'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    allOf:
                      - type: 'object'
                        properties:
                          type:
                            type: 'integer'
                      - $ref: '#/definitions/GetToken'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/me:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'auth'
      summary: 'Get Profile (Route All Roles)'
      description: 'Get Profile (Route All Roles)'
      operationId: 'getProfile'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    allOf:
                      - $ref: '#/definitions/GetProfile'
                      - type: 'object'
                        properties:
                          wallets:
                            type: 'array'
                            items:
                              allOf:
                                - $ref: '#/definitions/GetProfileUtility'
                                - type: 'object'
                                  properties:
                                    Wallet:
                                      allOf:
                                        - $ref: '#/definitions/GetWallet'
                                        - type: 'object'
                                          properties:
                                            Logo:
                                              $ref: '#/definitions/GetMedia'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/update-profile:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'auth'
      summary: 'Update Profile (Route All Roles)'
      description: 'Update Profile (Route All Roles)'
      operationId: 'updateProfile'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'avatar'
          type: 'file'
        - in: 'formData'
          name: 'full_name'
          type: 'string'
        - in: 'formData'
          name: 'address'
          type: 'string'
        - in: 'formData'
          name: 'phone_number'
          type: 'string'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/forgot-password:
    post:
      tags:
        - 'auth'
      summary: 'Forgot Password'
      description: 'Forgot Password'
      operationId: 'forgotPassword'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/PostForgotPassword'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/verify-token/{token}:
    get:
      tags:
        - 'auth'
      summary: 'Verify Token'
      description: 'Verify Token'
      operationId: 'verifyToken'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'token'
          required: true
          type: 'string'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetToken'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/auth/reset-password:
    put:
      tags:
        - 'auth'
      summary: 'Reset Password'
      description: 'Reset Password'
      operationId: 'resetPassword'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'token'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/UpdateResetPassword'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Get Single Merchant (Merchant Route)'
      description: 'Get Single Merchant (Merchant Route)'
      operationId: 'getSingleMerchant'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetMerchant'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Update Merchant Data (Merchant Route)'
      description: 'Upadate Merchant Data (Merchant Route)'
      operationId: 'updateMerchant'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'market_photo'
          type: 'file'
          required: true
        - in: 'formData'
          name: 'no_identity'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'market_name'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'market_address'
          type: 'integer'
          required: true
        - in: 'formData'
          name: 'market_lat'
          type: 'number'
          required: true
        - in: 'formData'
          name: 'market_lon'
          type: 'number'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/activate:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Activate User Merchant (Route All Roles)'
      description: 'Activate User Merchant (Route All Roles)'
      operationId: 'activateMerchant'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'no_identity'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'identity_photo'
          type: 'file'
          required: true
        - in: 'formData'
          name: 'market_photo'
          type: 'file'
          required: true
        - in: 'formData'
          name: 'market_name'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'market_address'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'market_lat'
          type: 'number'
          required: true
        - in: 'formData'
          name: 'market_lon'
          type: 'number'
          required: true
        - in: 'formData'
          name: 'market_close_time'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Product List (Merchant Route)'
      description: 'Product List (Merchant Route)'
      operationId: 'productList'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field product_name, market_name, market_address'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'product_name', 'market_name', 'market_address']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetProduct'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Add Product (Merchant Route)'
      description: 'Add Product (Merchant Route)'
      operationId: 'addProduct'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'product_name'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'description'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'cover'
          type: 'file'
          default: 1
        - in: 'formData'
          name: 'price_default'
          type: 'integer'
          required: true
        - in: 'formData'
          name: 'price_selling'
          type: 'integer'
          required: true
        - in: 'formData'
          name: 'qty'
          type: 'integer'
          required: true
        - in: 'formData'
          name: 'discount'
          type: 'integer'
          required: true
        - in: 'formData'
          name: 'is_visible'
          type: 'integer'
          default: 1
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetProductId'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Get Single Product (Route All Roles)'
      description: 'Get Single Product (Route All Roles)'
      operationId: 'singleProduct'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetSingleProduct'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Update Product (Merchant Route)'
      description: 'Update Product (Merchant Route)'
      operationId: 'updateProduct'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/UpdateProduct'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Delete Product (Merchant Route)'
      description: 'Delete Product (Merchant Route)'
      operationId: 'deleteProduct'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{id}/cover:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Change Product Cover (Merchant Route)'
      description: 'Change Product Cover (Merchant Route)'
      operationId: 'productCover'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'cover'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'object'
                    properties:
                      cover_uri:
                        type: 'string'
                      cover_label:
                        type: 'string'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{id}/status:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Change Product Status (Merchant Route)'
      description: 'Change Product Status (Merchant Route)'
      operationId: 'productStatus'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateProductStatus'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'object'
                    properties:
                      is_visible:
                        type: 'integer'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{id}/categories:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Bind Product Category (Merchant Route)'
      description: 'Bind Product Category (Merchant Route)'
      operationId: 'bindProductCategory'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostProductCategory'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetProductCategory'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{productId}/categories/{categoryId}:
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Unbind Product Category (Merchant Route)'
      description: 'Unbind Product Category (Merchant Route)'
      operationId: 'unbindProductCategory'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'productId'
          type: 'string'
          required: true
        - in: 'path'
          name: 'categoryId'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/{id}/image:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Add Product Image (Merchant Route)'
      description: 'Add Product Image (Merchant Route)'
      operationId: 'productImage'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'image'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/GetProductPhoto'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/products/image/{id}:
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Delete Product Image (Merchant Route)'
      description: 'Delete Product Image (Merchant Route)'
      operationId: 'delteProductImage'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/orders:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Merchant Orders (Merchant Route)'
      description: 'Merchant Orders (Merchant Route)'
      operationId: 'merchantOrders'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field full_name, phone_number, address'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'full_name', 'phone_number', 'address']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
        - in: 'query'
          name: 'status'
          type: 'string'
          enum: ['0', '1', '2']
          default: '0'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetOrder'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/orders/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Merchant Order (Merchant Route)'
      description: 'Merchant Order (Merchant Route)'
      operationId: 'merchantOrder'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetProductOrder'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Update Merchant Order (Merchant Route)'
      description: 'Update Merchant Order (Merchant Route)'
      operationId: 'updateMerchantOrder'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateProductOrderStatus'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetProductOrder'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/list:
    get:
      tags:
        - 'merchants'
      summary: 'Merchant List'
      description: 'Merchant List'
      operationId: 'merchantList'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field full_name, phone_number, market_name, market_address'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum:
            [
              'created_at',
              'full_name',
              'phone_number',
              'market_name',
              'market_address',
            ]
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetMerchant'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/random:
    get:
      tags:
        - 'merchants'
      summary: 'Merchant Random'
      description: 'Merchant Random'
      operationId: 'merchantRandom'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'limit'
          type: 'string'
          default: 10
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetMerchant'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/list/{id}:
    get:
      tags:
        - 'merchants'
      summary: 'Merchant Products'
      description: 'Merchant Products'
      operationId: 'merchantProducts'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetProduct'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/transactions:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Merchant Transactions (Merchant Route)'
      description: 'Merchant Transactions (Merchant Route)'
      operationId: 'merchantTransactions'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'date'
          type: 'string'
          description: 'Available search year-month-date'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetUserTransaction'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/incomes:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Merchant Incomes (Merchant Route)'
      description: 'Merchant Incomes (Merchant Route)'
      operationId: 'merchantIncomes'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'year'
          type: 'string'
          description: 'Available search year'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetMerchantIncomes'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/merchants/operation-time:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'merchants'
      summary: 'Update Merchant Operation Time (Merchant Route)'
      description: 'Update Merchant Operation Time (Merchant Route)'
      operationId: 'updateMerchantOperation'
      consumes:
        - 'applicaiton/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateMerchantOperation'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/carts:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'carts'
      summary: 'Add To Cart (Route All Roles)'
      description: 'Add To Cart (Route All Roles)'
      operationId: 'addToCart'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostAddToCart'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'carts'
      summary: 'Get Cart Items (Route All Roles)'
      description: 'Get Cart Items (Route All Roles)'
      operationId: 'cartItems'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetCart'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/carts/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'carts'
      summary: 'Update Item QTY (Route All Roles)'
      description: 'Update Item QTY (Route All Roles)'
      operationId: 'updateItemQTY'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateProductQty'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'carts'
      summary: 'Delete Item (Route All Roles)'
      description: 'Delete Item (Route All Roles)'
      operationId: 'deleteItem'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/carts/checkout:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'carts'
      summary: 'Cart Checkout (Route All Roles)'
      description: 'Cart Checkout (Route All Roles)'
      operationId: 'cartCheckout'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostCheckout'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/transactions:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'transactions'
      summary: 'Get All Transactions (Route All Roles)'
      description: 'Get All Transactions (Route All Roles)'
      operationId: 'allTransactions'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search full_name, phone_number, address'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'full_name', 'phone_number', 'address']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
        - in: 'query'
          name: 'status'
          type: 'string'
          enum: ['0', '1', '2', '3']
          default: '0'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetOrder'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/transactions/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'transactions'
      summary: 'Get Single Transaction (Route All Roles)'
      description: 'Get Single Transactions (Route All Roles)'
      operationId: 'singleTransaction'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    allOf:
                      - $ref: '#/definitions/GetOrder'
                      - type: 'object'
                        properties:
                          products:
                            type: 'array'
                            items:
                              $ref: '#/definitions/GetProductOrder'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'transactions'
      summary: 'Finish Transaction (Route All Roles)'
      description: 'Finish Transactions (Route All Roles)'
      operationId: 'finishTransaction'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'transactions'
      summary: 'Review Transaction (Route All Roles)'
      description: 'Review Transactions (Route All Roles)'
      operationId: 'reviewTransaction'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostReviewTransaction'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/medias:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Get All Media (Route All Roles)'
      description: 'Get All Media (Route All Roles)'
      operationId: 'getAllMedia'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field label'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'label']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetMedia'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Media (Admin Route)'
      description: 'Add Media (Admin Route)'
      operationId: 'addMedia'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'image'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/medias/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Media (Admin Route)'
      description: 'Update Meida (Admin Route)'
      operationId: 'updateMedia'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'image'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Media (Admin Route)'
      description: 'Delete Media (Admin Route)'
      operationId: 'deleteMedia'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/wallets:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Get All Wallet (Route All Roles)'
      description: 'Get All Wallet (Route All Roles)'
      operationId: 'getAllWallet'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field wallet_name, wallet_description'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'wallet_name', 'wallet_description']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetWallet'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Wallet (Admin Route)'
      description: 'Add Wallet (Admin Route)'
      operationId: 'addWallet'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'logo'
          type: 'file'
        - in: 'formData'
          name: 'wallet_name'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'wallet_description'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/wallets/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Wallet (Admin Route)'
      description: 'Update Wallet (Admin Route)'
      operationId: 'updateWallet'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateWallet'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Wallet (Admin Route)'
      description: 'Delete Wallet (Admin Route)'
      operationId: 'deleteWallet'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/wallets/{id}/logo:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Wallet Logo (Admin Route)'
      description: 'Update Wallet Logo (Admin Route)'
      operationId: 'updateWalletLogo'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'logo'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Get All Bank Data (Route All Roles)'
      description: 'Get All Bank Data (Route All Roles)'
      operationId: 'getAllBank'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field bank_name'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'bank_name']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetBank'
                        - type: 'object'
                          properties:
                            Logo:
                              $ref: '#/definitions/GetMedia'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Bank Data (Admin Route)'
      description: 'Add Bank Data (Admin Route)'
      operationId: 'addBank'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'logo'
          type: 'file'
        - in: 'formData'
          name: 'bank_name'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Get Bank Detail (Admin Route)'
      description: 'Get Bank Detail (Admin Route)'
      operationId: 'bankDetail'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetBank'
                        - type: 'object'
                          properties:
                            Logo:
                              $ref: '#/definitions/GetMedia'
                            Accounts:
                              type: 'array'
                              items:
                                $ref: '#/definitions/GetBankUser'
                            Utilities:
                              type: 'array'
                              items:
                                $ref: '#/definitions/GetBankUtility'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Bank Data (Admin Route)'
      description: 'Update Bank Data (Admin Route)'
      operationId: 'updateBank'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateBank'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Bank Data (Admin Route)'
      description: 'Delete Bank Data (Admin Route)'
      operationId: 'deleteBank'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks/{id}/logo:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Change Bank Logo (Admin Route)'
      description: 'Change Bank Logo (Admin Route)'
      operationId: 'changeBankLogo'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'logo'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks/{id}/detail:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Bank Detail (Admin Route)'
      description: 'Update Bank Detail (Admin Route)'
      operationId: 'updateBankDetail'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateBankDetail'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks/{id}/steps:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Bank Step (Admin Route)'
      description: 'Add Bank Step (Admin Route)'
      operationId: 'addBankStep'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostBankStep'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/banks/steps/{id}:
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Bank Step (Admin Route)'
      description: 'Delete Bank Step (Admin Route)'
      operationId: 'deleteBankStep'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/categories:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Get All Categories (Route All Roles)'
      description: 'Get All Categories (Route All Roles)'
      operationId: 'getAllCateogories'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field wallet_name, wallet_description'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'wallet_name', 'wallet_description']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetCategory'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Category (Admin Route)'
      description: 'Add Category (Admin Route)'
      operationId: 'addCategory'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'formData'
          name: 'icon'
          type: 'file'
        - in: 'formData'
          name: 'category'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'slug'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'description'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/categories/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Category (Admin Route)'
      description: 'Update Category (Admin Route)'
      operationId: 'updateCategory'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateCategory'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Category (Admin Route)'
      description: 'Delete Category (Admin Route)'
      operationId: 'deleteCategory'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/categories/{id}/icon:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Category Icon (Admin Route)'
      description: 'Update Category Icon (Admin Route)'
      operationId: 'updateCategoryIcon'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'formData'
          name: 'icon'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/faqs:
    get:
      tags:
        - 'masters'
      summary: 'Get All Faqs'
      description: 'Get All Faqs'
      operationId: 'getAllFaqs'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetFaq'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Add Faq (Admin Route)'
      description: 'Add Faq (Admin Route)'
      operationId: 'addFaq'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostFaq'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/masters/faqs/{id}:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Update Faq (Admin Route)'
      description: 'Update Faq (Admin Route)'
      operationId: 'updateFaq'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateFaq'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'masters'
      summary: 'Delete Faq (Admin Route)'
      description: 'Delete FAq (Admin Route)'
      operationId: 'deleteFaq'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/banks:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Get All Bank Data (Route All Roles)'
      description: 'Get All Bank Data (Route All Roles)'
      operationId: 'allBankData'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetBank'
                        - type: 'object'
                          properties:
                            Logo:
                              $ref: '#/definitions/GetMedia'
                            Account:
                              type: 'array'
                              items:
                                $ref: '#/definitions/GetBankUser'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/banks/{id}:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Get Bank Utlity (Route All Roles)'
      description: 'Get Bank Utlity (Route All Roles)'
      operationId: 'getBankUtlity'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          type: 'string'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetBank'
                        - type: 'object'
                          properties:
                            Logo:
                              $ref: '#/definitions/GetMedia'
                            Utilities:
                              type: 'array'
                              items:
                                $ref: '#/definitions/GetBankUtility'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/banks/users/get:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Get User Bank (Route All Roles)'
      description: 'Get User Bank (Route All Roles)'
      operationId: 'userBank'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetBankUser'
                        - type: 'object'
                          properties:
                            Bank:
                              allOf:
                                - $ref: '#/definitions/GetBank'
                                - type: 'object'
                                  properties:
                                    Logo:
                                      $ref: '#/definitions/GetMedia'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/banks/users:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Add Bank User (Route All Roles)'
      description: 'Add Bank User (Route All Roles)'
      operationId: 'addBankUser'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PostBankUser'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/banks/users/{id}:
    parameters:
      - in: 'path'
        name: 'id'
        type: 'string'
        required: true
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Update Bank User (Route All Roles)'
      description: 'Update Bank User (Route All Roles)'
      operationId: 'updateBankUser'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/UpdateBankUser'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - 'banks'
      summary: 'Delete Bank User (Route All Roles)'
      description: 'Delete Bank User (Route All Roles)'
      operationId: 'deleteBankUser'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get User Wallet (Route All Roles)'
      description: 'Get User Wallet (Route All Roles)'
      operationId: 'getUserWallet'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    $ref: '#/definitions/GetUserWallet'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Top Up (Route All Roles)'
      description: 'Top Up (Route All Roles)'
      operationId: 'topUp'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/PostTopUp'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup/{id}/image:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Upload Proof of Top Up (Route All Roles)'
      description: 'Upload Proof of Top Up (Route All Roles)'
      operationId: 'uploadProofOfTopUp'
      consumes:
        - 'multipart/form-data'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          type: 'string'
        - in: 'formData'
          name: 'image'
          type: 'file'
          required: true
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/withdraw:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Withdraw (Route All Roles)'
      description: 'Withdraw (Route All Roles)'
      operationId: 'withdraw'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/PostWithdraw'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup/histories:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get User Top Up Histories (Route All Roles)'
      description: 'Get User Top Up Histories (Route All Roles)'
      operationId: 'topUpHistories'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field balance_request, balance_transfer'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'balance_request', 'balance_transfer']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetTopUp'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/withdraw/histories:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get User Withdraw Histories (Route All Roles)'
      description: 'Get User Withdraw Histories (Route All Roles)'
      operationId: 'withdrawHistories'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field balance_request'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'balance_request']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetWithdraw'
                        - type: 'object'
                          properties:
                            UserBank:
                              allOf:
                                - $ref: '#/definitions/GetBankUser'
                                - type: 'object'
                                  properties:
                                    Bank:
                                      $ref: '#/definitions/GetBank'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup/{id}:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get Top Up Detail (Route All Roles)'
      description: 'Get Top Up Detail (Route All Roles)'
      operationId: 'topUpDetail'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          type: 'string'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetTopUp'
                        - type: 'object'
                          properties:
                            Bank:
                              allOf:
                                - $ref: '#/definitions/GetBank'
                                - type: 'object'
                                  properties:
                                    Utilities:
                                      type: 'array'
                                      items:
                                        $ref: '#/definitions/GetBankUtility'
                                    Accounts:
                                      type: 'array'
                                      items:
                                        $ref: '#/definitions/GetBankUser'
                            Media:
                              $ref: '#/definitions/GetMedia'
                            UserWallet:
                              type: 'object'
                              properties:
                                id_u_user:
                                  type: 'integer'
                                u_user:
                                  type: 'object'
                                  properties:
                                    id_m_users:
                                      type: 'integer'
                                    m_user:
                                      type: 'object'
                                      properties:
                                        full_name:
                                          type: 'string'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/withdraw/{id}:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get Withdraw Detail (Route All Roles)'
      description: 'Get Withdraw Detail (Route All Roles)'
      operationId: 'withdrawDetail'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          type: 'string'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      allOf:
                        - $ref: '#/definitions/GetTopUp'
                        - type: 'object'
                          properties:
                            UserBank:
                              allOf:
                                - $ref: '#/definitions/GetBankUser'
                                - type: 'object'
                                  properties:
                                    Bank:
                                      allOf:
                                        - $ref: '#/definitions/GetBank'
                                        - type: 'object'
                                          properties:
                                            Utilities:
                                              type: 'array'
                                              items:
                                                $ref: '#/definitions/GetBankUtility'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup/{id}/status:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Update Top Up Status (Admin Route)'
      description: 'Update Top Up Status (Admin Route)'
      operationId: 'updateTopUpStatus'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/UpdateTopUpStatus'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/withdraw/{id}/status:
    put:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Update Withdraw Status (Admin Route)'
      description: 'Update Withdraw Status (Admin Route)'
      operationId: 'updateWithdrawStatus'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'path'
          name: 'id'
          required: true
          type: 'string'
        - in: 'body'
          name: 'body'
          description: 'Request Data'
          required: true
          schema:
            $ref: '#/definitions/UpdateWithdrawStatus'
      responses:
        200:
          description: 'Request Success'
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/topup/users/all:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get All User Top Up (Admin Route)'
      description: 'Get All User Top Up (Admin Route)'
      operationId: 'allUserTopUp'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field balance_request, balance_transfer'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'balance_request', 'balance_transfer']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
        - in: 'query'
          name: 'status'
          type: 'string'
          enum: ['0', '1', '2']
          default: '0'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetTopUp'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/wallets/withdraw/users/all:
    get:
      security:
        - APIKeyHeader: []
      tags:
        - 'wallets'
      summary: 'Get All User Withdraw (Admin Route)'
      description: 'Get All User Withdraw (Admin Route)'
      operationId: 'allUserWithdraw'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field balance_request'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'balance_request']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
        - in: 'query'
          name: 'status'
          type: 'string'
          enum: ['0', '1', '2']
          default: '0'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetWithdraw'

        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/products:
    get:
      tags:
        - 'products'
      summary: 'Get All Products'
      description: 'Get All Products'
      operationId: 'getAllProducts'
      parameters:
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'limit'
          type: 'string'
          default: 10
        - in: 'query'
          name: 'search'
          type: 'string'
          description: 'Available search field product_name, market_name, market_address'
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'product_name', 'market_name', 'market_address']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetProduct'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
  /api/v1/products/categories/{categoryId}:
    get:
      tags:
        - 'products'
      summary: 'Get All Products by Category'
      description: 'Get All Products by Category'
      operationId: 'getAllProductsByCategory'
      parameters:
        - in: 'path'
          name: 'categoryId'
          required: true
          type: 'string'
        - in: 'query'
          name: 'page'
          type: 'string'
          default: 1
        - in: 'query'
          name: 'limit'
          type: 'string'
          default: 10
        - in: 'query'
          name: 'orderBy'
          type: 'string'
          enum: ['created_at', 'product_name', 'market_name', 'market_address']
          default: 'created_at'
        - in: 'query'
          name: 'orderDirection'
          type: 'string'
          enum: ['ASC', 'DESC']
          default: 'DESC'
      produces:
        - 'application/json'
      responses:
        200:
          description: 'Request Success'
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: 'object'
                properties:
                  data:
                    type: 'array'
                    items:
                      $ref: '#/definitions/GetProduct'
        400:
          description: 'Request Error'
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: 'Not Found'
          schema:
            $ref: '#/definitions/ApiResponse'
        500:
          description: 'Sever Error'
          schema:
            $ref: '#/definitions/ApiResponse'
securityDefinitions:
  APIKeyHeader:
    type: 'apiKey'
    name: 'authorization'
    in: 'header'
definitions:
  GetToken:
    type: 'object'
    properties:
      token:
        type: 'string'
  GetProductPhoto:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_product:
        type: 'integer'
      id_m_medias:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      url:
        type: 'string'
      label:
        type: 'string'
  GetProfile:
    type: 'object'
    properties:
      full_name:
        type: 'string'
      username:
        type: 'string'
      address:
        type: 'string'
      phone_number:
        type: 'string'
      face:
        type: 'string'
      token:
        type: 'string'
  GetProfileUtility:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_user:
        type: 'integer'
      id_m_wallets:
        type: 'integer'
      balance:
        type: 'integer'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetProduct:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_users:
        type: 'integer'
      product_name:
        type: 'string'
      description:
        type: 'string'
      id_cover:
        type: 'integer'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      price_default:
        type: 'integer'
      price_selling:
        type: 'integer'
      qty:
        type: 'integer'
      discount:
        type: 'integer'
      cover_uri:
        type: 'string'
      cover_label:
        type: 'string'
      id_merchant:
        type: 'integer'
      no_identity:
        type: 'string'
      id_identity_photo:
        type: 'integer'
      id_market_photo:
        type: 'integer'
      market_name:
        type: 'string'
      market_address:
        type: 'string'
      market_lat:
        type: 'number'
      market_lon:
        type: 'number'
      market_close_time:
        type: 'string'
      market_visible:
        type: 'integer'
      identity_uri:
        type: 'string'
      identity_label:
        type: 'string'
      market_uri:
        type: 'string'
      market_label:
        type: 'string'
  GetProductCategory:
    type: 'object'
    required:
      - 'id_category'
    properties:
      id:
        type: 'integer'
      id_u_product:
        type: 'integer'
      id_m_categories:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
      category:
        type: 'string'
      slug:
        type: 'string'
      description:
        type: 'string'
      is_visible:
        type: 'integer'
      id_icon:
        type: 'integer'
      url:
        type: 'string'
      label:
        type: 'string'
  GetOrder:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_users:
        type: 'integer'
      id_merchant:
        type: 'integer'
      transaction_token:
        type: 'string'
      total_price:
        type: 'integer'
      status:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      full_name:
        type: 'string'
      phone_number:
        type: 'string'
      address:
        type: 'string'
      id_photo:
        type: 'integer'
      uri:
        type: 'string'
      label:
        type: 'string'
      id_user_merchant:
        type: 'integer'
      id_market_photo:
        type: 'integer'
      market_name:
        type: 'string'
      market_address:
        type: 'string'
      market_lat:
        type: 'integer'
      market_lon:
        type: 'integer'
      market_close_time:
        type: 'string'
      market_visivle:
        type: 'integer'
      merchant_uri:
        type: 'string'
      merchant_label:
        type: 'string'
      cover_uri:
        type: 'string'
  GetMerchant:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_users:
        type: 'integer'
      id_u_user:
        type: 'integer'
      id_identity_photo:
        type: 'integer'
      id_market_photo:
        type: 'integer'
      no_identity:
        type: 'string'
      market_name:
        type: 'string'
      market_address:
        type: 'string'
      market_uri:
        type: 'string'
      market_label:
        type: 'string'
      phone_number:
        type: 'string'
      full_name:
        type: 'string'
      market_lat:
        type: 'number'
      market_lon:
        type: 'number'
      is_visible:
        type: 'integer'
      market_close_time:
        type: 'string'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
  GetProductOrder:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_user_transaction:
        type: 'integer'
      id_m_products:
        type: 'integer'
      qty:
        type: 'integer'
      transaction_token:
        type: 'string'
      sub_total_price:
        type: 'integer'
      status:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      product_name:
        type: 'string'
      description:
        type: 'string'
      id_cover:
        type: 'integer'
      product_visible:
        type: 'integer'
      cover_uri:
        type: 'string'
      cover_label:
        type: 'string'
  GetCart:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_users:
        type: 'integer'
      id_merchant:
        type: 'integer'
      id_m_products:
        type: 'integer'
      id_cover:
        type: 'integer'
      qty:
        type: 'integer'
      status:
        type: 'integer'
      product_name:
        type: 'string'
      description:
        type: 'string'
      uri:
        type: 'string'
      label:
        type: 'string'
      price_default:
        type: 'integer'
      price_selling:
        type: 'integer'
      discount:
        type: 'integer'
      max_qty:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
  GetWallet:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_logo:
        type: 'integer'
      wallet_name:
        type: 'string'
      wallet_description:
        type: 'string'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      craetedAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetMedia:
    type: 'object'
    properties:
      id:
        type: 'integer'
      uri:
        type: 'string'
      label:
        type: 'string'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetBank:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_logo:
        type: 'integer'
      bank_name:
        type: 'string'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetBankUser:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_banks:
        type: 'integer'
      id_m_users:
        type: 'integer'
      account_number:
        type: 'string'
      account_name:
        type: 'string'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetBankUtility:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_banks:
        type: 'integer'
      step:
        type: 'string'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetCategory:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_icon:
        type: 'integer'
      category:
        type: 'string'
      slug:
        type: 'string'
      description:
        type: 'string'
      uri:
        type: 'string'
      label:
        type: 'string'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
  GetUserWallet:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_user:
        type: 'integer'
      id_m_wallets:
        type: 'integer'
      balance:
        type: 'integer'
      is_visible:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetTopUp:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_user_wallet:
        type: 'integer'
      id_m_banks:
        type: 'integer'
      balance_request:
        type: 'integer'
      balance_transfer:
        type: 'integer'
      status:
        type: 'integer'
      proof_id:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetWithdraw:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_u_user_wallet:
        type: 'integer'
      id_u_user_bank_account:
        type: 'integer'
      balance_request:
        type: 'integer'
      status:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetSingleProduct:
    type: 'object'
    properties:
      id_m_users:
        type: 'integer'
      product_id:
        type: 'integer'
      product_name:
        type: 'string'
      description:
        type: 'string'
      price_default:
        type: 'integer'
      price_selling:
        type: 'integer'
        format: 'date-time'
      qty:
        type: 'integer'
      dicount:
        type: 'integer'
      cover_uri:
        type: 'string'
      cover_label:
        type: 'string'
      market_name:
        type: 'string'
      market_address:
        type: 'string'
      market_lat:
        type: 'integer'
      markt_lon:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      images:
        type: 'array'
        items:
          type: 'object'
          properties:
            product_image_id:
              type: 'string'
            uri:
              type: 'string'
            label:
              type: 'string'
            created_at:
              type: 'string'
              format: 'date-time'
            updated_at:
              type: 'string'
              format: 'date-time'
      categories:
        type: 'array'
        items:
          type: 'object'
          properties:
            category_id:
              type: 'integer'
            category:
              type: 'string'
            slug:
              type: 'string'
            description:
              type: 'string'
            icon_uri:
              type: 'string'
            icon_label:
              type: 'string'
            created_at:
              type: 'string'
              format: 'date-time'
            updated_at:
              type: 'string'
              format: 'date-time'
  GetUserTransaction:
    type: 'object'
    properties:
      id:
        type: 'integer'
      id_m_users:
        type: 'integer'
      id_merchant:
        type: 'integer'
      transaction_token:
        type: 'string'
      total_price:
        type: 'integer'
      status:
        type: 'integer'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
      createdAt:
        type: 'string'
        format: 'date-time'
      updatedAt:
        type: 'string'
        format: 'date-time'
  GetFaq:
    type: 'object'
    properties:
      id:
        type: 'integer'
      question:
        type: 'string'
      answer:
        type: 'string'
      created_at:
        type: 'string'
        format: 'date-time'
      updated_at:
        type: 'string'
        format: 'date-time'
  GetMerchantIncomes:
    type: 'object'
    properties:
      month:
        type: 'string'
      income:
        type: 'integer'
  GetProductId:
    type: 'object'
    properties:
      product_id:
        type: 'integer'
  PostLogin:
    type: 'object'
    required:
      - 'username'
      - 'password'
    properties:
      username:
        type: 'string'
      password:
        type: 'string'
  PostRegister:
    type: 'object'
    required:
      - 'full_name'
      - 'username'
      - 'password'
      - 'phone_number'
      - 'address'
    properties:
      full_name:
        type: 'string'
      username:
        type: 'string'
      password:
        type: 'string'
      phone_number:
        type: 'string'
      address:
        type: 'string'
  PostForgotPassword:
    type: 'object'
    required:
      - 'phone_number'
    properties:
      phone_number:
        type: 'string'
  PostAddToCart:
    type: 'object'
    required:
      - 'qty'
      - 'id_merchant'
      - 'id_m_products'
    properties:
      qty:
        type: 'integer'
      id_merchant:
        type: 'integer'
      id_m_products:
        type: 'integer'
  PostProductCategory:
    type: 'object'
    required:
      - 'id_category'
    properties:
      id_category:
        type: 'integer'
  PostReviewTransaction:
    type: 'object'
    required:
      - 'rating'
      - 'review'
    properties:
      rating:
        type: 'integer'
      review:
        type: 'string'
  PostBankStep:
    type: 'object'
    required:
      - 'step'
    properties:
      step:
        type: 'string'
  PostBankUser:
    type: 'object'
    required:
      - 'id_m_banks'
      - 'account_number'
      - 'account_name'
    properties:
      id_m_banks:
        type: 'integer'
      account_number:
        type: 'string'
      account_name:
        type: 'string'
  PostTopUp:
    type: 'object'
    required:
      - 'id_m_banks'
      - 'balance_request'
      - 'balance_transfer'
    properties:
      id_m_banks:
        type: 'integer'
      balance_request:
        type: 'integer'
      balance_transfer:
        type: 'integer'
  PostWithdraw:
    type: 'object'
    required:
      - 'id_u_user_bank_account'
      - 'balance_request'
    properties:
      id_u_user_bank_account:
        type: 'integer'
      balance_request:
        type: 'integer'
  PostCheckout:
    type: 'object'
    required:
      - 'price_total'
    properties:
      price_total:
        type: 'integer'
  PostFaq:
    type: 'object'
    required:
      - 'question'
      - 'answer'
    properties:
      question:
        type: 'string'
      answer:
        type: 'string'
  UpdateResetPassword:
    type: 'object'
    required:
      - 'new_password'
    properties:
      new_password:
        type: 'string'
  UpdateProduct:
    type: 'object'
    properties:
      product_name:
        type: 'string'
      description:
        type: 'string'
      price_default:
        type: 'integer'
      price_selling:
        type: 'integer'
      qty:
        type: 'integer'
      discount:
        type: 'integer'
      is_visible:
        type: 'integer'
  UpdateProductStatus:
    type: 'object'
    properties:
      is_visible:
        type: 'integer'
  UpdateProductOrderStatus:
    type: 'object'
    properties:
      status:
        type: 'integer'
  UpdateProductQty:
    type: 'object'
    required:
      - 'qty'
    properties:
      qty:
        type: 'integer'
  UpdateWallet:
    type: 'object'
    properties:
      wallet_name:
        type: 'string'
      wallet_description:
        type: 'string'
      is_visible:
        type: 'integer'
  UpdateBank:
    type: 'object'
    properties:
      bank_name:
        type: 'string'
      is_visible:
        type: 'integer'
  UpdateBankDetail:
    type: 'object'
    required:
      - 'account_number'
      - 'account_name'
    properties:
      account_number:
        type: 'string'
      account_name:
        type: 'string'
  UpdateCategory:
    type: 'object'
    properties:
      category:
        type: 'string'
      slug:
        type: 'string'
      description:
        type: 'string'
      is_visible:
        type: 'integer'
  UpdateBankUser:
    type: 'object'
    properties:
      id_m_banks:
        type: 'integer'
      account_number:
        type: 'string'
      account_name:
        type: 'string'
  UpdateTopUpStatus:
    type: 'object'
    properties:
      status:
        type: 'integer'
  UpdateWithdrawStatus:
    type: 'object'
    properties:
      status:
        type: 'integer'
  UpdateMerchantOperation:
    type: 'object'
    properties:
      market_close_time:
        type: 'string'
  UpdateFaq:
    type: 'object'
    properties:
      question:
        type: 'string'
      answer:
        type: 'string'
  ApiResponse:
    type: 'object'
    properties:
      code:
        type: 'number'
      success:
        type: 'boolean'
      messages:
        type: 'array'
        items:
          type: 'string'
externalDocs:
  description: 'Find out more about Swagger'
  url: 'http://swagger.io'
